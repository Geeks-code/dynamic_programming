class Solution{
		

	public:
	int minOperations(string str1, string str2) 
	{ 
	    // Your code goes here
	    int ans;
	    int m=str1.size();
	    int n=str2.size();
	    int dp[m+1][n+1];
	    for(int i=0;i<=m;i++){
	        for(int j=0;j<=n;j++){
	            if(i==0 || j==0){
	                dp[i][j]=0;
	            }
	            else if(str1[i-1]==str2[j-1]){dp[i][j]=1+dp[i-1][j-1];}
	            else dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
	        }
	    }
	    ans = dp[m][n];                        //LCS gives common characters shared between string a and string b
	    return m-ans+n-ans;                    // m - length of string a
                                                n- length of string b
                                                "m-ans" gives the extra characters in string a which needs to be deleted
                                                "n-ans" gives the count of extra characters apart from LCS which needs to be added in string a so that it can be converted to string b
	} 
};
